[{"path":"https://briandconnelly.github.io/checkenv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 checkenv authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://briandconnelly.github.io/checkenv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Connelly. Author, maintainer, copyright holder.","code":""},{"path":"https://briandconnelly.github.io/checkenv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Connelly B (2023). checkenv: Checks Various Computing Environments. https://github.com/briandconnelly/checkenv, https://briandconnelly.github.io/checkenv/.","code":"@Manual{,   title = {checkenv: Checks for Various Computing Environments},   author = {Brian Connelly},   year = {2023},   note = {https://github.com/briandconnelly/checkenv, https://briandconnelly.github.io/checkenv/}, }"},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"checkenv","dir":"","previous_headings":"","what":"Checks for Various Computing Environments","title":"Checks for Various Computing Environments","text":"checkenv collection lightweight functions can used determine computing environment code running. includes Continuous Integration (CI) environments, containers, different operating systems, . Similar identical functions already exist. However, functions exist within highly specialized packages, using several can quickly create lot dependencies projects. goal checkenv provide unified collection checks can used better understand environments code running.","code":""},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Checks for Various Computing Environments","text":"’d like try development version checkenv, can install directly GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"briandconnelly/checkenv\")"},{"path":[]},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"am-i-online","dir":"","previous_headings":"Some Examples","what":"Am I online?","title":"Checks for Various Computing Environments","text":"Alternatives: curl::has_internet() (used checkenv), testthat::skip_if_offline(), pingr::is_online()","code":"library(checkenv)  is_online() #> [1] TRUE"},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"am-i-using-rstudio","dir":"","previous_headings":"Some Examples","what":"Am I using RStudio?","title":"Checks for Various Computing Environments","text":"Alternatives: rstudioapi::isAvailable()","code":"using_rstudio() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"am-i-using-macos-on-an-intel-mac","dir":"","previous_headings":"Some Examples","what":"Am I using macOS? On an Intel Mac?","title":"Checks for Various Computing Environments","text":"","code":"using_macos() #> [1] TRUE using_macos() && using_x86_cpu() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"are-we-running-in-a-docker-container","dir":"","previous_headings":"Some Examples","what":"Are we running in a Docker container?","title":"Checks for Various Computing Environments","text":"","code":"using_docker_container() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/index.html","id":"are-we-using-a-continuous-integration-service-github-actions","dir":"","previous_headings":"Some Examples","what":"Are we using a continuous integration service? GitHub Actions?","title":"Checks for Various Computing Environments","text":"Alternatives: testthat::skip_on_ci() (on_ci()), testthat::skip_on_travis(), testthat::skip_on_appveyor()","code":"using_ci() #> [1] FALSE  using_github_actions() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/bioconductor.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Bioconductor — on_bioconductor","title":"Detect Bioconductor — on_bioconductor","text":"Detect Bioconductor","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/bioconductor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Bioconductor — on_bioconductor","text":"","code":"on_bioconductor()"},{"path":"https://briandconnelly.github.io/checkenv/reference/bioconductor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Bioconductor — on_bioconductor","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/bioconductor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Bioconductor — on_bioconductor","text":"","code":"on_bioconductor() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/checkenv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"checkenv: Checks for Various Computing Environments — checkenv-package","title":"checkenv: Checks for Various Computing Environments — checkenv-package","text":"checkenv collection lightweight functions can used determine computing environment code running. includes Continuous Integration (CI) environments, containers, different operating systems, .","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/checkenv/reference/checkenv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"checkenv: Checks for Various Computing Environments — checkenv-package","text":"Maintainer: Brian Connelly bdc@bconnelly.net (ORCID) [copyright holder]","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether running in a CI environment — using_ci","title":"Detect whether running in a CI environment — using_ci","text":"using_ci() reports whether continuous integration environment used. using_appveyor() reports whether AppVeyor used using_circle_ci() reports whether CircleCI used using_codebuild() reports whether AWS CodeBuild used using_github_actions() reports whether GitHub Actions used using_gitlab_ci() reports whether GitLab CI/CD used using_jenkins() reports whether Jenkins used using_travis_ci() reports whether Travis CI used","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether running in a CI environment — using_ci","text":"","code":"using_ci(service = NULL)  using_appveyor()  using_circle_ci()  using_codebuild()  using_github_actions()  using_gitlab_ci()  using_jenkins()  using_travis_ci()"},{"path":"https://briandconnelly.github.io/checkenv/reference/ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect whether running in a CI environment — using_ci","text":"service provided, particular CI service checked. , commonly-used CI environment variable checked.","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether running in a CI environment — using_ci","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether running in a CI environment — using_ci","text":"","code":"using_ci() #> [1] TRUE using_appveyor() #> [1] FALSE using_circle_ci() #> [1] FALSE using_codebuild() #> [1] FALSE using_github_actions() #> [1] TRUE using_gitlab_ci() #> [1] FALSE using_jenkins() #> [1] FALSE using_travis_ci() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/config.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether a configuration is currently active — using_config","title":"Detect whether a configuration is currently active — using_config","text":"Environment-specific configuration values can used alter code's behavior different environments. config package uses R_CONFIG_ACTIVE environment variable specify active environment. R_CONFIG_ACTIVE set, \"default\" configuration used.","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether a configuration is currently active — using_config","text":"","code":"using_config(config)"},{"path":"https://briandconnelly.github.io/checkenv/reference/config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect whether a configuration is currently active — using_config","text":"config Configuration name","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether a configuration is currently active — using_config","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether a configuration is currently active — using_config","text":"","code":"# See whether the default configuration is being used using_config(\"default\") #> [1] TRUE  # See whether the \"production\" configuration is being used using_config(\"production\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/container.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect container environments — using_container","title":"Detect container environments — using_container","text":"Detect container environments","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect container environments — using_container","text":"","code":"using_container()  using_docker_container()  using_podman_container()  using_kubernetes()"},{"path":"https://briandconnelly.github.io/checkenv/reference/container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect container environments — using_container","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect container environments — using_container","text":"","code":"using_container() #> [1] FALSE using_docker_container() #> [1] FALSE using_podman_container() #> [1] FALSE using_kubernetes() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/covr.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect covr — using_covr","title":"Detect covr — using_covr","text":"Detect covr","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/covr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect covr — using_covr","text":"","code":"using_covr()"},{"path":"https://briandconnelly.github.io/checkenv/reference/covr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect covr — using_covr","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/covr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect covr — using_covr","text":"","code":"using_covr() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/cpu.html","id":null,"dir":"Reference","previous_headings":"","what":"Processor Checks — using_cpu","title":"Processor Checks — using_cpu","text":"using_cpu() checks whether machine uses given type processor . using_x86_cpu() checks whether machine uses x86 processor using_arm_cpu() checks whether machine uses ARM-based processor","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/cpu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processor Checks — using_cpu","text":"","code":"using_cpu(arch)  using_x86_cpu()  using_arm_cpu()"},{"path":"https://briandconnelly.github.io/checkenv/reference/cpu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processor Checks — using_cpu","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/cpu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processor Checks — using_cpu","text":"","code":"using_arm_cpu() #> [1] FALSE using_x86_cpu() #> [1] TRUE using_arm_cpu() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect CRAN — on_cran","title":"Detect CRAN — on_cran","text":"Detect CRAN","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect CRAN — on_cran","text":"","code":"on_cran()"},{"path":"https://briandconnelly.github.io/checkenv/reference/cran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect CRAN — on_cran","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/cran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect CRAN — on_cran","text":"","code":"on_cran() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/databricks.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Databricks Runtime Environment — using_databricks","title":"Detect Databricks Runtime Environment — using_databricks","text":"Detect Databricks Runtime Environment","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/databricks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Databricks Runtime Environment — using_databricks","text":"","code":"using_databricks()"},{"path":"https://briandconnelly.github.io/checkenv/reference/databricks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Databricks Runtime Environment — using_databricks","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/databricks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Databricks Runtime Environment — using_databricks","text":"","code":"using_databricks() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/is_online.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the machine is connected to the internet — is_online","title":"Check whether the machine is connected to the internet — is_online","text":"Check whether machine connected internet","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/is_online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the machine is connected to the internet — is_online","text":"","code":"is_online()"},{"path":"https://briandconnelly.github.io/checkenv/reference/is_online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the machine is connected to the internet — is_online","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/is_online.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether the machine is connected to the internet — is_online","text":"","code":"is_online() #> [1] TRUE"},{"path":"https://briandconnelly.github.io/checkenv/reference/option.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether a global option is being used — using_option","title":"Determine whether a global option is being used — using_option","text":"Determine whether global option used","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether a global option is being used — using_option","text":"","code":"using_option(x, value = NULL)"},{"path":"https://briandconnelly.github.io/checkenv/reference/option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether a global option is being used — using_option","text":"x Option name value Optional value compare ","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether a global option is being used — using_option","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether a global option is being used — using_option","text":"","code":"using_option(\"width\") #> [1] TRUE  using_option(\"boot.parallel\", value = \"multicore\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/os.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests for operating systems — using_os","title":"Tests for operating systems — using_os","text":"Tests operating systems","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests for operating systems — using_os","text":"","code":"using_os(os = c(\"linux\", \"macos\", \"solaris\", \"windows\"))  using_linux()  using_macos()  using_solaris()  using_windows()"},{"path":"https://briandconnelly.github.io/checkenv/reference/os.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests for operating systems — using_os","text":"os Operating system name. One linux, macos, solaris, windows","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests for operating systems — using_os","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests for operating systems — using_os","text":"","code":"using_os(os = \"linux\") #> [1] TRUE using_linux() #> [1] TRUE using_macos() #> [1] FALSE using_solaris() #> [1] FALSE using_windows() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rlang is_interactive","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/rstudio.html","id":null,"dir":"Reference","previous_headings":"","what":"RStudio environments — using_rstudio","title":"RStudio environments — using_rstudio","text":"RStudio environments","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/rstudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RStudio environments — using_rstudio","text":"","code":"using_rstudio()  using_rstudio_jobs()"},{"path":"https://briandconnelly.github.io/checkenv/reference/rstudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RStudio environments — using_rstudio","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/rstudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RStudio environments — using_rstudio","text":"","code":"using_rstudio() #> [1] FALSE using_rstudio_jobs() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect testthat — using_testthat","title":"Detect testthat — using_testthat","text":"Detect testthat","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect testthat — using_testthat","text":"","code":"using_testthat()"},{"path":"https://briandconnelly.github.io/checkenv/reference/testthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect testthat — using_testthat","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/testthat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect testthat — using_testthat","text":"","code":"using_testthat() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/checkenv/reference/using_envvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether an environment variable is being used — using_envvar","title":"Determine whether an environment variable is being used — using_envvar","text":"Determine whether environment variable used","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/using_envvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether an environment variable is being used — using_envvar","text":"","code":"using_envvar(x, value = NULL)"},{"path":"https://briandconnelly.github.io/checkenv/reference/using_envvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether an environment variable is being used — using_envvar","text":"x Environment variable value Optional value compare ","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/using_envvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether an environment variable is being used — using_envvar","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/using_envvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether an environment variable is being used — using_envvar","text":"","code":"using_envvar(\"NOT_CRAN\") #> [1] TRUE  using_envvar(\"CI\", \"true\") #> [1] TRUE"},{"path":"https://briandconnelly.github.io/checkenv/reference/vscode.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether code is running in Visual Studio Code — using_vscode","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"Detect whether code running Visual Studio Code","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/vscode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"","code":"using_vscode()"},{"path":"https://briandconnelly.github.io/checkenv/reference/vscode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/checkenv/reference/vscode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"","code":"using_vscode() #> [1] FALSE"}]
